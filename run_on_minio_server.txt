sudo bash -c 'cat > /usr/local/bin/collect_metrics.sh << "EOL"
#!/bin/bash

# Get disk utilization percentage
DISK_UTIL=$(df -h | grep /dev/xvda1 | awk '"'"'{print $5}'"'"' | sed '"'"'s/%//'"'"')

# Get disk I/O stats
# Capture initial values
DISK_READ_SECTORS_START=$(cat /proc/diskstats | grep xvda | awk '"'"'{print $6}'"'"')
DISK_WRITE_SECTORS_START=$(cat /proc/diskstats | grep xvda | awk '"'"'{print $10}'"'"')

# Get memory utilization
MEM_UTIL=$(free | grep Mem | awk '"'"'{print $3/$2 * 100.0}'"'"')

# Get CPU utilization
CPU_UTIL=$(top -bn1 | grep "Cpu(s)" | awk '"'"'{print $2 + $4}'"'"')

# Get network traffic
# Capture initial values
RX_BYTES_START=$(cat /proc/net/dev | grep eth0 | awk '"'"'{print $2}'"'"')
TX_BYTES_START=$(cat /proc/net/dev | grep eth0 | awk '"'"'{print $10}'"'"')

# Wait 1 second for measurement
sleep 1

# Capture final disk I/O values
DISK_READ_SECTORS_END=$(cat /proc/diskstats | grep xvda | awk '"'"'{print $6}'"'"')
DISK_WRITE_SECTORS_END=$(cat /proc/diskstats | grep xvda | awk '"'"'{print $10}'"'"')

# Calculate disk I/O rates (sectors per second)
DISK_READ_RATE=$((DISK_READ_SECTORS_END - DISK_READ_SECTORS_START))
DISK_WRITE_RATE=$((DISK_WRITE_SECTORS_END - DISK_WRITE_SECTORS_START))

# Convert to KB per second (each sector is typically 512 bytes)
DISK_READ_KB=$((DISK_READ_RATE * 512 / 1024))
DISK_WRITE_KB=$((DISK_WRITE_RATE * 512 / 1024))

# Capture final network values
RX_BYTES_END=$(cat /proc/net/dev | grep eth0 | awk '"'"'{print $2}'"'"')
TX_BYTES_END=$(cat /proc/net/dev | grep eth0 | awk '"'"'{print $10}'"'"')

# Calculate network rate per second
RX_RATE=$((RX_BYTES_END - RX_BYTES_START))
TX_RATE=$((TX_BYTES_END - TX_BYTES_START))

# Get container status (1 for running, 0 for stopped)
CONTAINER_STATUS=$(docker ps -q --filter "name=minio" | wc -l)

# Get MinIO API health
MINIO_HEALTH=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:9000/minio/health/live)

# Get MinIO object storage metrics
# Get total number of buckets
BUCKETS_COUNT=$(docker exec minio mc ls local 2>/dev/null | wc -l || echo 0)

# Get total objects by sampling a bucket (if exists)
FIRST_BUCKET=$(docker exec minio mc ls local 2>/dev/null | head -1 | awk '"'"'{print $5}'"'"' || echo "")
if [ ! -z "$FIRST_BUCKET" ]; then
  OBJECTS_COUNT=$(docker exec minio mc ls local/$FIRST_BUCKET --recursive 2>/dev/null | wc -l || echo 0)
else
  OBJECTS_COUNT=0
fi

# Get MinIO disk usage from Docker stats
MINIO_DISK_USAGE=$(docker exec minio du -s /data 2>/dev/null | awk '"'"'{print $1}'"'"' || echo 0)

# Get MinIO uptime in seconds
MINIO_UPTIME=$(docker inspect --format '"'"'{{.State.StartedAt}}'"'"' minio 2>/dev/null | xargs -I{} date +%s -d {} | xargs -I{} echo $(date +%s)-{} | bc || echo 0)

# Publish metrics to CloudWatch
aws cloudwatch put-metric-data --namespace MinIO --metric-name DiskUtilization --value $DISK_UTIL --region us-east-1
aws cloudwatch put-metric-data --namespace MinIO --metric-name DiskReadKBps --value $DISK_READ_KB --region us-east-1
aws cloudwatch put-metric-data --namespace MinIO --metric-name DiskWriteKBps --value $DISK_WRITE_KB --region us-east-1
aws cloudwatch put-metric-data --namespace MinIO --metric-name MemoryUtilization --value $MEM_UTIL --region us-east-1
aws cloudwatch put-metric-data --namespace MinIO --metric-name CPUUtilization --value $CPU_UTIL --region us-east-1
aws cloudwatch put-metric-data --namespace MinIO --metric-name NetworkRxBytes --value $RX_RATE --region us-east-1
aws cloudwatch put-metric-data --namespace MinIO --metric-name NetworkTxBytes --value $TX_RATE --region us-east-1
aws cloudwatch put-metric-data --namespace MinIO --metric-name ContainerStatus --value $CONTAINER_STATUS --region us-east-1
aws cloudwatch put-metric-data --namespace MinIO --metric-name APIHealth --value $MINIO_HEALTH --region us-east-1

# Publish object storage specific metrics
aws cloudwatch put-metric-data --namespace MinIO --metric-name BucketsCount --value $BUCKETS_COUNT --region us-east-1
aws cloudwatch put-metric-data --namespace MinIO --metric-name ObjectsCount --value $OBJECTS_COUNT --region us-east-1
aws cloudwatch put-metric-data --namespace MinIO --metric-name StorageUsageBytes --value $MINIO_DISK_USAGE --region us-east-1
aws cloudwatch put-metric-data --namespace MinIO --metric-name UptimeSeconds --value $MINIO_UPTIME --region us-east-1
EOL'

# Make executable
sudo chmod +x /usr/local/bin/collect_metrics.sh

# Set up to run every minute
sudo bash -c 'while true; do /usr/local/bin/collect_metrics.sh; sleep 60; done' > /dev/null 2>&1 &